name: Pylint & Black

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12","3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Config Poetry & Install dependencies
      run: |
        poetry config virtualenvs.create true 
        poetry config virtualenvs.in-project true
    - name: Define a cache for the virtual environment based on the dependencies lock file
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root
    - name: Analysing the code with pylint
      run: |
        poetry run pylint $(git ls-files '*.py')
  
  black:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
        with:
          options: "--check --verbose --exclude old_test "
